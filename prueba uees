USE [Candidato01] 
/****** CREACION DE TABLAS ******/


--TABLA DOCENTE
CREATE TABLE [dbo].[tbl_docente](
	[id_docente] [numeric](18, 0) NOT NULL,
	[id_rol] [numeric](18, 0) NOT NULL,
	[nombre] [varchar](100) NOT NULL,
	[ident] [numeric](18, 0) NOT NULL,
	[pws] [char](12) NOT NULL,
 CONSTRAINT [PK_tbl_docente] PRIMARY KEY CLUSTERED 
(
	[id_docente] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]


--TABLA ESTUDIANTE
CREATE TABLE [dbo].[tbl_est](
	[id_est] [numeric](18, 0) NOT NULL,
	[nombre] [varchar](100) NOT NULL,
	[carrera] [varnchar](10) NULL,
	[identif] [nchar](10) NULL,
	[pws] [nchar](10) NULL,
 CONSTRAINT [PK_tbl_est] PRIMARY KEY CLUSTERED 
(
	[id_est] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


--TABLA MATERIAS
CREATE TABLE [dbo].[tbl_materias](
	[id_mat] [numeric](18, 0) NOT NULL,
	[nombre] [varchar](100) NOT NULL,
 CONSTRAINT [PK_tbl_materias] PRIMARY KEY CLUSTERED 
(
	[id_mat] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]


--TABLA NOTAS FINALES
CREATE TABLE [dbo].[tbl_nfn](
	[id_nf] [numeric](18, 0) NOT NULL,
	[id_est] [numeric](18, 0) NOT NULL,
	[id_mat] [numeric](18, 0) NOT NULL,
	[id_doc] [numeric](18, 0) NOT NULL,
	[n1] [decimal](18, 2) NOT NULL,
	[n2] [decimal](18, 2) NOT NULL,
	[n3] [decimal](18, 2) NOT NULL,
	[nf] [decimal](18, 2) NOT NULL,
 CONSTRAINT [PK_tbl_nfn] PRIMARY KEY CLUSTERED 
(
	[id_nf] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]


--TABLA NOTAS TEMPORALES
CREATE TABLE [dbo].[tbl_ntemp](
	[id_ntemp] [numeric](18, 0) NOT NULL,
	[id_est] [numeric](18, 0) NOT NULL,
	[id_mat] [numeric](18, 0) NOT NULL,
	[id_doc] [numeric](18, 0) NOT NULL,
	[n1] [decimal](18, 2) NOT NULL,
	[n2] [decimal](18, 2) NOT NULL,
	[n3] [decimal](18, 2) NOT NULL,
 CONSTRAINT [PK_TBL_TEMPS] PRIMARY KEY CLUSTERED 
(
	[id_ntemp] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]


--TABLA ROL
CREATE TABLE [dbo].[tbl_rol](
	[id_rol] [numeric](18, 0) NOT NULL,
	[nombre] [nchar](10) NOT NULL,
 CONSTRAINT [PK_tbl_rol] PRIMARY KEY CLUSTERED 
(
	[id_rol] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]



ALTER TABLE [dbo].[tbl_docente]  WITH CHECK ADD  CONSTRAINT [FK_tbl_docente_tbl_rol] FOREIGN KEY([id_rol])
REFERENCES [dbo].[tbl_rol] ([id_rol])

ALTER TABLE [dbo].[tbl_docente] CHECK CONSTRAINT [FK_tbl_docente_tbl_rol]

ALTER TABLE [dbo].[tbl_nfn]  WITH CHECK ADD  CONSTRAINT [FK_tbl_nfn_tbl_docente] FOREIGN KEY([id_doc])
REFERENCES [dbo].[tbl_docente] ([id_docente])

ALTER TABLE [dbo].[tbl_nfn] CHECK CONSTRAINT [FK_tbl_nfn_tbl_docente]

ALTER TABLE [dbo].[tbl_nfn]  WITH CHECK ADD  CONSTRAINT [FK_tbl_nfn_tbl_est] FOREIGN KEY([id_est])
REFERENCES [dbo].[tbl_est] ([id_est])

ALTER TABLE [dbo].[tbl_nfn] CHECK CONSTRAINT [FK_tbl_nfn_tbl_est]

ALTER TABLE [dbo].[tbl_nfn]  WITH CHECK ADD  CONSTRAINT [FK_tbl_nfn_tbl_materias] FOREIGN KEY([id_mat])
REFERENCES [dbo].[tbl_materias] ([id_mat])

ALTER TABLE [dbo].[tbl_nfn] CHECK CONSTRAINT [FK_tbl_nfn_tbl_materias]


--ingreso de datos de roles
INSERT INTO tbl_rol (id_rol,nombre)VALUES 
	('1','docente'),
	('2','estudiante'),
	('3','adm'),
	('4','user');


--ingreso de datos de docente
INSERT INTO tbl_docente (id_docente, id_rol, nombre, ident, pws) 
VALUES 
	(1, 1, 'Carlos García', 10001, 'passdocente'),
	(2, 2, 'Ana Pérez', 10002, 'adminclave');


--ingreso de datos de estudiante
INSERT INTO tbl_est (id_est, nombre, carrera, identif, pws)
VALUES 
	(1, 'Maria','IngSis','12345','estclave1'),
	(2,'Juan','IngInd','67890','estclave2'),
	(3,'Laura','IngSis','54321','estclave3');


--ingreso de datos de materias
INSERT INTO tbl_materias (id_mat, nombre)
VALUES (1, 'Matematica'),(2, 'Programacion'),(3, 'Fisica');


--ingreso de datos de Notas temporales
INSERT INTO tbl_ntemp (id_ntemp, id_est, id_mat, id_doc, n1, n2, n3)
VALUES (1, 201, 301, 101, 7.0, 8.0, 9.0),
	(2, 202, 302, 101, 6.0, 6.5, 5.0),(3, 203, 303, 102, 9.0, 9.5, 10.0);


--procedimiento almacenado para mover las notas de la tabbla temporal a la tabla de notas finales, generando la nota final en automatico y borrando la base anterior
CREATE PROCEDURE procesarNota
AS
BEGIN
    SET NOCOUNT ON;
    INSERT INTO tbl_nfn (id_nf,id_est,id_mat,id_doc,n1,n2,n3,nf
    )
    SELECT
        id_ntemp,id_est,id_mat,id_doc,n1,n2,n3,
        (n1 * 0.30 + n2 * 0.30 + n3 * 0.40) AS nf,
    FROM tbl_ntemp;

    -- Borrar todos los datos de la tabla temporal
    DELETE FROM tbl_ntemp;
END
GO

--consulta para ver las notas por estudiante con datos en lugar de id
SELECT nfn.id_nf,est.nombre AS nombre_estudiante,mat.nombre AS 
nombre_materia,doc.nombre AS nombre_docente,nfn.n1,nfn.n2,nfn.n3,
nfn.nf,nfn.est FROM tbl_nfn nfn
INNER JOIN tbl_est est ON nfn.id_est = est.id_est
INNER JOIN tbl_materias mat ON nfn.id_mat = mat.id_mat
INNER JOIN tbl_docente doc ON nfn.id_doc = doc.id_docente;

--consulta para buscar notas de un estudiante específico
SELECT * FROM vw_notas_con_nombres WHERE nombre_estudiante LIKE '%Juan%';

--ver promedio general de cada estudiante
SELECT est.nombre AS nombre_estudiante,AVG(nfn.nf) AS promedio_final
FROM tbl_nfn nfn
INNER JOIN tbl_est est ON nfn.id_est = est.id_est
GROUP BY est.nombre;

--consulta Estudiantes que han reprobado alguna materia
SELECT est.nombre AS nombre_estudiante,mat.nombre AS nombre_materia,
nfn.nf FROM tbl_nfn nfn
INNER JOIN tbl_est est ON nfn.id_est = est.id_est
INNER JOIN tbl_materias mat ON nfn.id_mat = mat.id_mat
WHERE nfn.nf < 7;

--consulta cuantos docentes hay por materia
SELECT DISTINCT doc.nombre AS nombre_docente,mat.nombre AS 
nombre_materia FROM tbl_nfn nfn
INNER JOIN tbl_docente doc ON nfn.id_doc = doc.id_docente
INNER JOIN tbl_materias mat ON nfn.id_mat = mat.id_mat;
